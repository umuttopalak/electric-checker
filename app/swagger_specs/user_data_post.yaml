tags: ["Telegram"]
summary: "Create a new user with Telegram data"
description: "This endpoint receives user information sent by the bot and creates a new user."
parameters:
  - name: "first_name"
    in: "query"
    required: true
    schema:
      type: string
    description: "The user's first name."
    example: "John"
  - name: "last_name"
    in: "query"
    required: true
    schema:
      type: string
    description: "The user's last name."
    example: "Doe"
  - name: "email"
    in: "query"
    required: true
    schema:
      type: string
    description: "The user's email address."
    example: "john.doe@example.com"
  - name: "phone_number"
    in: "query"
    required: true
    schema:
      type: string
    description: "The user's phone number."
    example: "5551234567"
  - name: "chat_id"
    in: "query"
    required: true
    schema:
      type: string
    description: "The Telegram chat ID."
    example: "123456789"
responses:
  201:
    description: "User successfully created"
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              example: "OK"
            message:
              type: string
              example: "User successfully created"
  400:
    description: "Missing required user information"
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              example: "NOK"
            message:
              type: string
              example: "Missing information"
  409:
    description: "User already exists"
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              example: "OK"
            message:
              type: string
              example: "User already registered"
  500:
    description: "Internal server error"
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              example: "NOK"
            message:
              type: string
              example: "Operation Failed."
            error:
              type: string
              example: "Detailed error message here."
